import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–µ–ø–ª–æ—è
const config = {
  distDir: path.join(__dirname, '..', 'dist'),
  serverDir: process.env.DEPLOY_PATH || '/var/www/seka-card-game',
  backupDir: process.env.BACKUP_PATH || '/var/www/backups/seka-card-game'
};

// –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
function createBackup() {
  console.log('üì¶ Creating backup...');
  const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
  const backupPath = path.join(config.backupDir, `backup-${timestamp}`);
  
  if (!fs.existsSync(config.backupDir)) {
    fs.mkdirSync(config.backupDir, { recursive: true });
  }
  
  if (fs.existsSync(config.serverDir)) {
    execSync(`cp -r ${config.serverDir} ${backupPath}`);
    console.log('‚úÖ Backup created successfully');
  }
}

// –î–µ–ø–ª–æ–π —Ñ–∞–π–ª–æ–≤
function deployFiles() {
  console.log('üöÄ Deploying files...');
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
  if (!fs.existsSync(config.serverDir)) {
    fs.mkdirSync(config.serverDir, { recursive: true });
  }
  
  // –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
  execSync(`cp -r ${config.distDir}/* ${config.serverDir}/`);
  console.log('‚úÖ Files deployed successfully');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è
async function deploy() {
  try {
    console.log('üöÄ Starting deployment...');
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
    createBackup();
    
    // –î–µ–ø–ª–æ–π —Ñ–∞–π–ª–æ–≤
    deployFiles();
    
    console.log('‚ú® Deployment completed successfully!');
  } catch (error) {
    console.error('‚ùå Deployment failed:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ –¥–µ–ø–ª–æ—è
deploy(); 