version: '3.8'

services:
  app:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://seka_user:your-password@db:5432/seka_game
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    volumes:
      - ../:/var/www/seka-game
    networks:
      - seka-network

  db:
    image: postgres:14
    environment:
      - POSTGRES_USER=seka_user
      - POSTGRES_PASSWORD=your-password
      - POSTGRES_DB=seka_game
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
      - ../postgresql/pg_hba.conf:/etc/postgresql/pg_hba.conf
    ports:
      - "5432:5432"
    networks:
      - seka-network

  redis:
    image: redis:6
    volumes:
      - redis_data:/data
      - ../redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - seka-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/seka-game.conf:/etc/nginx/conf.d/default.conf
      - ../static:/var/www/seka-game/public
      - ../certbot/conf:/etc/letsencrypt
      - ../certbot/www:/var/www/certbot
    depends_on:
      - app
    networks:
      - seka-network

  certbot:
    image: certbot/certbot
    volumes:
      - ../certbot/conf:/etc/letsencrypt
      - ../certbot/www:/var/www/certbot
    networks:
      - seka-network

volumes:
  postgres_data:
  redis_data:

networks:
  seka-network:
    driver: bridge 